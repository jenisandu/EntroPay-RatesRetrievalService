package jpa;
// Generated May 22, 2016 3:43:39 AM by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.sql.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
//import javax.xml.bind.annotation.XmlAccessorType;
//import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;


import util.DateSerializer;

import javax.xml.bind.annotation.XmlElement;

/**
 * Rates generated by hbm2java
 */
@Entity
@Table(name = "rate", catalog = "entropay_test")
@XmlRootElement(name = "rate")
//@XmlAccessorType(XmlAccessType.FIELD)
@NamedQueries({
    @NamedQuery(name = "Rate.findAll", query = "SELECT r FROM Rate r"),
    @NamedQuery(name = "Rate.findByRateId", query = "SELECT r FROM Rate r WHERE r.rateId = :rateId"),
    @NamedQuery(name = "Rate.findByRateDate", query = "SELECT r FROM Rate r WHERE r.rateDate = :rateDate"),
    @NamedQuery(name = "Rate.findByRateValue", query = "SELECT r FROM Rate r WHERE r.rateValue = :rateValue"),
    @NamedQuery(name = "Rate.findByBuyFormat", query = "SELECT r FROM Rate r WHERE r.buyFormat = :buyFormat"),
    @NamedQuery(name = "Rate.findBySellFormat", query = "SELECT r FROM Rate r WHERE r.sellFormat = :sellFormat")})

public class Rate implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Integer rateId;
	private Date rateDate;
	private BigDecimal rateValue;
	private String buyFormat;
	private String sellFormat;
	private String fileN;

	public Rate() {
	}

	public Rate(Date rateDate) {
		this.rateDate = rateDate;
	}

	public Rate(Date rateDate, BigDecimal rateValue, String buyFormat, String sellFormat, String fileN) {
		this.rateDate = rateDate;
		this.rateValue = rateValue;
		this.buyFormat = buyFormat;
		this.sellFormat = sellFormat;
		this.fileN = fileN;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "RATE_ID", unique = true, nullable = false)
	@XmlElement
	public Integer getRateId() {
		return this.rateId;
	}

	public void setRateId(Integer rateId) {
		this.rateId = rateId;
	}

	@Column(name = "RATE_DATE", nullable = false, length = 10)
	@XmlElement
	@XmlJavaTypeAdapter(DateSerializer.class)
	public Date getRateDate() {
		return this.rateDate;
	}
	

	public void setRateDate(Date rateDate) {
		this.rateDate = rateDate;
	}

	@Column(name = "RATE_VALUE", precision = 8, scale = 5)
	@XmlElement
	public BigDecimal getRateValue() {
		return this.rateValue;
	}

	public void setRateValue(BigDecimal rateValue) {
		this.rateValue = rateValue;
	}

	@Column(name = "BUY_FORMAT", length = 3)
	@XmlElement
	public String getBuyFormat() {
		return this.buyFormat;
	}

	public void setBuyFormat(String buyFormat) {
		this.buyFormat = buyFormat;
	}

	@Column(name = "SELL_FORMAT", length = 3)
	@XmlElement
	public String getSellFormat() {
		return this.sellFormat;
	}
	
	public void setSellFormat(String sellFormat) {
		this.sellFormat = sellFormat;
	}

	@Column(name = "FILE_N", length = 255)
	@XmlElement
	public String getFileN() {
		return this.fileN;
	}
	
	public void setFileN(String fileN) {
		this.fileN = fileN;
	}
	
	@Override
	public int hashCode() {
		int hash = 0;
		hash += (rateId != null ? rateId.hashCode() : 0);
		return hash;
	}

	@Override
	public boolean equals(Object object) {
		if (!(object instanceof Rate)) {
			return false;
		}
		Rate other = (Rate) object;
		if ((this.rateId == null && other.rateId != null)
				|| (this.rateId != null && !this.rateId.equals(other.rateId))) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return "Rate [rateId=" + rateId + ", date=" + rateDate + ", rateValue=" + rateValue + ", buyFormat=" + buyFormat
				+ ", sellFormat=" + sellFormat + "]";
	}

}
